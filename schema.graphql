type TokenAllocation @entity {
  id: ID!
  recipient: String!
  amount: BigInt!
  timestamp: BigInt!
  txHash: String!
  distributor: String
  givback: Boolean!
}

type TransactionTokenAllocation @entity {
    id: ID!
    tokenAllocationIds : [String!]!
}

type Balance @entity{
    id: ID!
    balance: BigInt!
    allocatedTokens: BigInt!
    claimed:  BigInt!
    rewardPerTokenPaidGivLm:  BigInt
    rewardsGivLm:  BigInt
    rewardPerTokenPaidGivEth:  BigInt
    rewardsGivEth:  BigInt
    rewardPerTokenPaidGivHny:  BigInt
    rewardsGivHny:  BigInt
    rewardPerTokenPaidUniswap:  BigInt
    rewardsUniswap:  BigInt
    rewardPerTokenPaidBalancerLiquidity:  BigInt
    rewardsBalancerLiquidity:  BigInt
    givback: BigInt!
    balancerLp: BigInt!
    balancerLpStaked: BigInt!
    sushiswapLp: BigInt!
    sushiSwapLpStaked: BigInt!
    honeyswapLp : BigInt!
    honeyswapLpStaked : BigInt!
    givStaked: BigInt!

}

type UnipoolContractInfo @entity {
    id: ID!
    rewardDistribution: String
    periodFinish: BigInt
    rewardRate: BigInt
    lastUpdateTime: BigInt
    rewardPerTokenStored: BigInt
}

type TokenDistroContractInfo @entity {
    id: ID!
    totalTokens: BigInt
    startTime: BigInt
    cliffTime: BigInt
    duration: BigInt
    initialAmount: BigInt
    lockedAmount: BigInt
}

type Price @entity {
    id: ID!
    from: String!
    to: String!
    value: BigInt!
    source: String!
    blockTimeStamp: BigInt
}
